{"name": "test_logout", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0085DCE3+50899]\n\t(No symbol) [0x007EE111]\n\t(No symbol) [0x006F5588]\n\t(No symbol) [0x007208F9]\n\t(No symbol) [0x00720AFB]\n\t(No symbol) [0x0074F902]\n\t(No symbol) [0x0073B944]\n\t(No symbol) [0x0074E01C]\n\t(No symbol) [0x0073B6F6]\n\t(No symbol) [0x00717708]\n\t(No symbol) [0x0071886D]\n\tGetHandleVerifier [0x00AC3EAE+2566302]\n\tGetHandleVerifier [0x00AF92B1+2784417]\n\tGetHandleVerifier [0x00AF327C+2759788]\n\tGetHandleVerifier [0x008F5740+672048]\n\t(No symbol) [0x007F8872]\n\t(No symbol) [0x007F41C8]\n\t(No symbol) [0x007F42AB]\n\t(No symbol) [0x007E71B7]\n\tBaseThreadInitThunk [0x763A7D49+25]\n\tRtlInitializeExceptionChain [0x7765B74B+107]\n\tRtlClearBits [0x7765B6CF+191]", "trace": "open_login_page = <page_objects.site_pages.LoginPage object at 0x000001871B854F40>\n\n    @pytest.fixture()\n    def expand_dropdown_menu(open_login_page):\n>       return open_login_page.expand_dropdown_menu()\n\n..\\..\\conftest.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\page_objects\\site_pages.py:202: in expand_dropdown_menu\n    self._click(self.__dropdown_menu)\n..\\..\\utilities\\web_ui\\base_page.py:29: in _click\n    self._wait_until_to_be_clickable(locator).click()\n..\\..\\utilities\\web_ui\\base_page.py:18: in _wait_until_to_be_clickable\n    return self.__wait.until(EC.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f3f68a0d07cb817bc072a98bc7dc0d20\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001871B8EBC10>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x0085DCE3+50899]\nE       \t(No symbol) [0x007EE111]\nE       \t(No symbol) [0x006F5588]\nE       \t(No symbol) [0x007208F9]\nE       \t(No symbol) [0x00720AFB]\nE       \t(No symbol) [0x0074F902]\nE       \t(No symbol) [0x0073B944]\nE       \t(No symbol) [0x0074E01C]\nE       \t(No symbol) [0x0073B6F6]\nE       \t(No symbol) [0x00717708]\nE       \t(No symbol) [0x0071886D]\nE       \tGetHandleVerifier [0x00AC3EAE+2566302]\nE       \tGetHandleVerifier [0x00AF92B1+2784417]\nE       \tGetHandleVerifier [0x00AF327C+2759788]\nE       \tGetHandleVerifier [0x008F5740+672048]\nE       \t(No symbol) [0x007F8872]\nE       \t(No symbol) [0x007F41C8]\nE       \t(No symbol) [0x007F42AB]\nE       \t(No symbol) [0x007E71B7]\nE       \tBaseThreadInitThunk [0x763A7D49+25]\nE       \tRtlInitializeExceptionChain [0x7765B74B+107]\nE       \tRtlClearBits [0x7765B6CF+191]\n\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "start": 1682793096048, "stop": 1682793096048, "uuid": "7376a3c8-28db-41e1-a4e3-d26900c69cf4", "historyId": "bdbb605a89e557a885bad7445b41194a", "testCaseId": "74cfec21ab4c524f0295b15ca088a9c2", "fullName": "tests.ui_tests.test_account_page#test_logout"}