{"name": "test_open_account_page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x005BDCE3+50899]\n\t(No symbol) [0x0054E111]\n\t(No symbol) [0x00455588]\n\t(No symbol) [0x004808F9]\n\t(No symbol) [0x00480AFB]\n\t(No symbol) [0x004AF902]\n\t(No symbol) [0x0049B944]\n\t(No symbol) [0x004AE01C]\n\t(No symbol) [0x0049B6F6]\n\t(No symbol) [0x00477708]\n\t(No symbol) [0x0047886D]\n\tGetHandleVerifier [0x00823EAE+2566302]\n\tGetHandleVerifier [0x008592B1+2784417]\n\tGetHandleVerifier [0x0085327C+2759788]\n\tGetHandleVerifier [0x00655740+672048]\n\t(No symbol) [0x00558872]\n\t(No symbol) [0x005541C8]\n\t(No symbol) [0x005542AB]\n\t(No symbol) [0x005471B7]\n\tBaseThreadInitThunk [0x763A7D49+25]\n\tRtlInitializeExceptionChain [0x7765B74B+107]\n\tRtlClearBits [0x7765B6CF+191]", "trace": "open_account_page = <page_objects.site_pages.AccountPage object at 0x0000026BCD920490>\n\n    @pytest.mark.main\n    @pytest.mark.smoke\n    def test_open_account_page(open_account_page):\n>       assert open_account_page.is_account_page_opened(), 'Account page is not opened'\n\ntest_main_page.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\page_objects\\site_pages.py:94: in is_account_page_opened\n    return self._is_page_opened(locator=self.__account_page)\n..\\..\\utilities\\web_ui\\base_page.py:32: in _is_page_opened\n    page = self.__wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"42554b8d3df2b16a1686a8ab0aa46420\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000026BCD87D040>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x005BDCE3+50899]\nE       \t(No symbol) [0x0054E111]\nE       \t(No symbol) [0x00455588]\nE       \t(No symbol) [0x004808F9]\nE       \t(No symbol) [0x00480AFB]\nE       \t(No symbol) [0x004AF902]\nE       \t(No symbol) [0x0049B944]\nE       \t(No symbol) [0x004AE01C]\nE       \t(No symbol) [0x0049B6F6]\nE       \t(No symbol) [0x00477708]\nE       \t(No symbol) [0x0047886D]\nE       \tGetHandleVerifier [0x00823EAE+2566302]\nE       \tGetHandleVerifier [0x008592B1+2784417]\nE       \tGetHandleVerifier [0x0085327C+2759788]\nE       \tGetHandleVerifier [0x00655740+672048]\nE       \t(No symbol) [0x00558872]\nE       \t(No symbol) [0x005541C8]\nE       \t(No symbol) [0x005542AB]\nE       \t(No symbol) [0x005471B7]\nE       \tBaseThreadInitThunk [0x763A7D49+25]\nE       \tRtlInitializeExceptionChain [0x7765B74B+107]\nE       \tRtlClearBits [0x7765B6CF+191]\n\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "start": 1682870327824, "stop": 1682870338037, "uuid": "2e46dcf4-3931-4b73-8373-1dbc4f6e65f6", "historyId": "76e6472f50ba40f1932ccb4eaba4575c", "testCaseId": "068425bd72afb766158bf8a197634431", "fullName": "tests.ui_tests.test_main_page#test_open_account_page", "labels": [{"name": "tag", "value": "smoke"}, {"name": "tag", "value": "main"}, {"name": "parentSuite", "value": "tests.ui_tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "host", "value": "DESKTOP-AI869SF"}, {"name": "thread", "value": "5876-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui_tests.test_main_page"}]}