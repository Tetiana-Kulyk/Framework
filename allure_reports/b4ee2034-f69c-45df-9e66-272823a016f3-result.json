{"name": "test_notify_about_availability", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\t(No symbol) [0x0063DCE3]\n\t(No symbol) [0x005D39D1]\n\t(No symbol) [0x004E4DA8]\n\t(No symbol) [0x0051019F]\n\t(No symbol) [0x005103AB]\n\t(No symbol) [0x0053EE62]\n\t(No symbol) [0x0052AF14]\n\t(No symbol) [0x0053D57C]\n\t(No symbol) [0x0052ACC6]\n\t(No symbol) [0x00506F68]\n\t(No symbol) [0x005080CD]\n\tGetHandleVerifier [0x008B3832+2506274]\n\tGetHandleVerifier [0x008E9794+2727300]\n\tGetHandleVerifier [0x008EE36C+2746716]\n\tGetHandleVerifier [0x006E6690+617600]\n\t(No symbol) [0x005DC712]\n\t(No symbol) [0x005E1FF8]\n\t(No symbol) [0x005E20DB]\n\t(No symbol) [0x005EC63B]\n\tBaseThreadInitThunk [0x76327D49+25]\n\tRtlInitializeExceptionChain [0x779BB74B+107]\n\tRtlClearBits [0x779BB6CF+191]", "trace": "notify_about_availability = <page_objects.site_pages.WishlistPage object at 0x000002A800D29FD0>\n\n    @pytest.mark.regression\n    @pytest.mark.wishlist\n    def test_notify_about_availability(notify_about_availability):\n>       assert notify_about_availability.is_notify_about_availability_checkbox_checked(), 'The \"notify about ' \\\n                                                                                          'availability\" checkbox is ' \\\n                                                                                          'not unchecked'\n\ntests\\ui_tests\\test_wishlist_page.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects\\site_pages.py:38: in is_notify_about_availability_checkbox_checked\n    if self._is_selected(locator=self.__selected_availability_checkbox):\nutilities\\web_ui\\base_page.py:37: in _is_selected\n    return self.__wait.until(EC.element_attribute_to_include(locator=locator, attribute_='checked'))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"06692c139fb19e287123d51bcfdbd0fd\")>\nmethod = <function element_attribute_to_include.<locals>._predicate at 0x000002A800225790>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x0063DCE3]\nE       \t(No symbol) [0x005D39D1]\nE       \t(No symbol) [0x004E4DA8]\nE       \t(No symbol) [0x0051019F]\nE       \t(No symbol) [0x005103AB]\nE       \t(No symbol) [0x0053EE62]\nE       \t(No symbol) [0x0052AF14]\nE       \t(No symbol) [0x0053D57C]\nE       \t(No symbol) [0x0052ACC6]\nE       \t(No symbol) [0x00506F68]\nE       \t(No symbol) [0x005080CD]\nE       \tGetHandleVerifier [0x008B3832+2506274]\nE       \tGetHandleVerifier [0x008E9794+2727300]\nE       \tGetHandleVerifier [0x008EE36C+2746716]\nE       \tGetHandleVerifier [0x006E6690+617600]\nE       \t(No symbol) [0x005DC712]\nE       \t(No symbol) [0x005E1FF8]\nE       \t(No symbol) [0x005E20DB]\nE       \t(No symbol) [0x005EC63B]\nE       \tBaseThreadInitThunk [0x76327D49+25]\nE       \tRtlInitializeExceptionChain [0x779BB74B+107]\nE       \tRtlClearBits [0x779BB6CF+191]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "start": 1681757758623, "stop": 1681757769457, "uuid": "bafae359-7093-4b73-aa6f-3ff2e1711ec5", "historyId": "57f9aef59dc912922b42a80fadb3f02a", "testCaseId": "79afe1223fbeed4969d6a082561e21d5", "fullName": "tests.ui_tests.test_wishlist_page#test_notify_about_availability", "labels": [{"name": "tag", "value": "wishlist"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.ui_tests"}, {"name": "suite", "value": "test_wishlist_page"}, {"name": "host", "value": "DESKTOP-AI869SF"}, {"name": "thread", "value": "8216-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui_tests.test_wishlist_page"}]}