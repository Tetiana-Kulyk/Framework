{"name": "test_open_account_page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "open_login_page = <page_objects.site_pages.LoginPage object at 0x0000026D227636D0>, expand_dropdown_menu = <page_objects.site_pages.LoginPage object at 0x0000026D227636D0>\nenv = <utilities.configuration.Configuration object at 0x0000026D21E184C0>\n\n    @pytest.fixture()\n    def open_main_page(open_login_page, expand_dropdown_menu, env):\n>       return expand_dropdown_menu.login(env.email, env.password)\n\nconftest.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects\\site_pages.py:202: in login\n    self.set_email(email).set_password(password).click_login_button()\npage_objects\\site_pages.py:198: in click_login_button\n    self._is_element_disappeared(locator=self.__dropdown_popup)\nutilities\\web_ui\\base_page.py:37: in _is_element_disappeared\n    return self.__wait.until(EC.invisibility_of_element_located(locator=locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f49929d339162703ba13380a8f668500\")>\nmethod = <function invisibility_of_element_located.<locals>._predicate at 0x0000026D2275DF70>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "start": 1681674197853, "stop": 1681674197853, "uuid": "358ab36c-8479-451f-83d5-a36f74bf4ed4", "historyId": "76e6472f50ba40f1932ccb4eaba4575c", "testCaseId": "068425bd72afb766158bf8a197634431", "fullName": "tests.ui_tests.test_main_page#test_open_account_page", "labels": [{"name": "tag", "value": "smoke"}, {"name": "tag", "value": "main"}, {"name": "parentSuite", "value": "tests.ui_tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "host", "value": "DESKTOP-AI869SF"}, {"name": "thread", "value": "5376-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui_tests.test_main_page"}]}